xend = ymd_hms("2018-08-13 23:00:00"),
y = 4, yend = 85),
linetype = "dashed", linewidth = 0.4) +
annotate(geom  = "text",
x     = ymd_hms("2018-08-13 23:00:00"),
y     = 4,
label = "bull 1",
size = 8/2.845276, angle = 90, hjust = -0.4, vjust = -0.5) +
annotate(geom = "rect",
xmin = ymd_hms("2018-12-28 00:00:00"),
xmax = ymd_hms("2019-02-26 23:00:00"),
ymin = 4, ymax = 85,
fill = "grey60", colour = NA, alpha = 0.2) +
geom_segment(aes(x    = ymd_hms("2019-02-26 23:00:00"),
xend = ymd_hms("2019-02-26 23:00:00"),
y = 4, yend = 85),
linetype = "dashed", linewidth = 0.4) +
annotate(geom  = "text",
x     = ymd_hms("2019-02-26 23:00:00"),
y     = 4,
label = "bull 1",
size = 8/2.845276, angle = 90, hjust = -0.4, vjust = -0.5) +
# bull 2:  31.05.2018 until 30.07.2018
# bull 2:  16.12.2018 until 14.02.2019
annotate(geom = "rect",
xmin = ymd_hms("2018-05-31 00:00:00"),
xmax = ymd_hms("2018-07-30 23:00:00"),
ymin = 3, ymax = 84,
fill = "grey60", colour = NA, alpha = 0.2) +
geom_segment(aes(x    = ymd_hms("2018-07-30 23:00:00"),
xend = ymd_hms("2018-07-30 23:00:00"),
y = 3, yend = 84),
linetype = "dashed", linewidth = 0.4) +
annotate(geom  = "text",
x     = ymd_hms("2018-07-30 23:00:00"),
y     = 3,
label = "bull 2",
size = 8/2.845276, angle = 90, hjust = -0.4, vjust = -0.5) +
annotate(geom = "rect",
xmin = ymd_hms("2018-12-16 00:00:00"),
xmax = ymd_hms("2019-02-14 23:00:00"),
ymin = 3, ymax = 84,
fill = "grey60", colour = NA, alpha = 0.2) +
geom_segment(aes(x    = ymd_hms("2019-02-14 23:00:00"),
xend = ymd_hms("2019-02-14 23:00:00"),
y = 3, yend = 84),
linetype = "dashed", linewidth = 0.4) +
annotate(geom  = "text",
x     = ymd_hms("2019-02-14 23:00:00"),
y     = 3,
label = "bull 2",
size = 8/2.845276, angle = 90, hjust = -0.4, vjust = -0.5) +
# bull 3:  17.05.2018 until 16.07.2018
# bull 3:  08.11.2018 until 07.01.2019
annotate(geom = "rect",
xmin = ymd_hms("2018-05-17 00:00:00"),
xmax = ymd_hms("2018-07-16 23:00:00"),
ymin = 2, ymax = 83,
fill = "grey60", colour = NA, alpha = 0.2) +
geom_segment(aes(x    = ymd_hms("2018-07-16 23:00:00"),
xend = ymd_hms("2018-07-16 23:00:00"),
y = 2, yend = 83),
linetype = "dashed", linewidth = 0.4) +
annotate(geom  = "text",
x     = ymd_hms("2018-07-16 23:00:00"),
y     = 2,
label = "bull 3",
size = 8/2.845276, angle = 90, hjust = -0.4, vjust = -0.5) +
annotate(geom = "rect",
xmin = ymd_hms("2018-11-08 00:00:00"),
xmax = ymd_hms("2019-01-07 23:00:00"),
ymin = 2, ymax = 83,
fill = "grey60", colour = NA, alpha = 0.2) +
geom_segment(aes(x    = ymd_hms("2019-01-07 23:00:00"),
xend = ymd_hms("2019-01-07 23:00:00"),
y = 2, yend = 83),
linetype = "dashed", linewidth = 0.4) +
annotate(geom  = "text",
x     = ymd_hms("2019-01-07 23:00:00"),
y     = 2,
label = "bull 3",
size = 8/2.845276, angle = 90, hjust = -0.4, vjust = -0.5) +
# add the THI data
geom_line(aes(x = time, y = thi.mad),
linewidth = 0.2, col = "firebrick") +
# add THI = 72 horizontal line
geom_hline(yintercept = 72, linetype = "solid", linewidth = 0.4, col = "black") +
# define axes
scale_x_datetime(limits        = ymd_hms(c("2018-04-01 00:00:00", "2019-03-28 00:00:00")),
date_breaks       = "1 month",
date_minor_breaks = "1 week",
date_labels       = "%b",
expand            = c(0.01, 0.01)) +
scale_y_continuous(limits = c(0, 85),
breaks = seq(0,85,10),
expand = c(0.02,0.02)) +
# labs
labs(x = "\n2018/2019",
y = "Temperature Humidity Index, THI\n") +
# theme
my_theme +
theme(axis.text.x = element_text(hjust = -0.3))
png("./Fig2-heat-thi.png",
width = 165, height = 100, units = "mm",
pointsize = 10, res = 600)
plot.thi
dev.off()
dat <- read_csv("./data/sperm-volume-density.csv")
dat <- read_csv("./data/sperm-volume-density.csv")
View(dat)
sperm <- dat %>%
pivot_longer(
cols = starts_with("motility"),
names_to = "motility.cond",
#names_prefix = "wk",
values_to = "motility.perc",
values_drop_na = FALSE
)
dat
library(kableExtra)    # html-table
library(tidyverse)     # tidy universe
library(readxl)        # read Excel-files
library(rstatix)       # data summary
library(lme4)          # linear mixed model
library(lmerTest)      # get pvals
library(emmeans)       # post-hoc
library(performance)   # model performance
library(patchwork)     # combine plots
my_theme = theme_classic() +
theme(text = element_text(family = "sans"),
plot.title  = element_text(face = "plain", size = 10),
axis.title  = element_text(face = "plain", size = 10),
legend.text = element_text(face = "plain", size = 8),
axis.text  = element_text(size = 8, angle = 0, vjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
set.seed(1989)
dat <- read_csv("./data/sperm-volume-density.csv")
dat
sperm <- dat %>%
mutate(sample = paste0(generation, "-", time)) %>%
# make factors
mutate_at(vars(generation,
id,
season,
time,
sample) , ~as.factor(.)) %>%
mutate(date = as.Date(date))
dmy(dat$date)
sperm <- dat %>%
mutate(sample = paste0(generation, "-", time)) %>%
# make factors
mutate_at(vars(generation,
id,
season,
time,
sample) , ~as.factor(.)) %>%
mutate(date = lubridate::dmy(date))
sperm
dat <- dat %>%
mutate(sample = paste0(generation, "-", time)) %>%
# make factors
mutate_at(vars(generation,
id,
season,
time,
sample) , ~as.factor(.)) %>%
mutate(date = lubridate::dmy(date))
rm(sperm)
dat
hist(dat$volume, breaks = 30)
contr = lmerControl(optCtrl = list(maxfun = 10000000),
calc.derivs = FALSE)
mod.vol <- lmerTest::lmer(volume ~
# test predictors
season * sample +
# no other control predictors
# random/nested factors
(1|id),
data    = sperm,
REML    = TRUE,
control = contr)
mod.vol <- lmerTest::lmer(volume ~
# test predictors
season * sample +
# no other control predictors
# random/nested factors
(1|id),
data    = dat,
REML    = TRUE,
control = contr)
summary(mod.vol)
emm.vol <- emmeans(mod.vol,
specs = pairwise ~ season | sample,
type = "response",
adjust = "tukey")
emm.vol$emmeans
emm.vol$contrasts
# cld = compact letter display
cld.vol <- multcomp::cld(emm.vol$emmeans, Letters=letters)
# remove whitespace in string in column ".group"
cld.vol$.group <- str_replace_all(cld.vol$.group, fixed(" "), "")
x <- c("summerF0-now", "winterF0-now",
"summerF1-early", "winterF1-early",
"summerF1-later", "winterF1-later")
cld.vol <- as_tibble(cld.vol) %>%
mutate(uniq = paste0(season,sample)) %>%
mutate(uniq =  factor(uniq, levels = x)) %>%
arrange(uniq)
cld.vol
# x axis
xlabs.vol <- c("F0 founder \n(summer: 355-375 days) \n(winter: 550-561 days)",
"F1 offspring \n(355-375 days)",
"F1 offspring \n(398-417 days)")
# prepare x-position of emmeans
cld.vol$xpos   <- c(0.8, 1.2, 1.8, 2.2, 2.8, 3.2)
cld.vol$xpos.l <- c(0.7, 1.25, 1.7, 2.25, 2.7, 3.25)
# volume plot
plot.vol <- sperm %>%
ggplot() +
geom_point(aes(x = sample, y = volume, col = season),
size = 1.5,
position = position_jitterdodge(jitter.width = 0, dodge.width = 0.4)) +
geom_vline(xintercept = 1.5, linetype = "dashed") +
scale_colour_manual(name = "",
values = c("orange", "cornflowerblue"),
labels = c("F0: summer or F1-S",
"F0: winter or F1-W"))+
scale_y_continuous(lim = c(0, 7.1), breaks = seq(0, 7, 2)) +
scale_x_discrete(labels= xlabs.vol) +
geom_point(data=cld.vol, col="black", size = 1,
aes(x=xpos, y=emmean)) +
geom_errorbar(data=cld.vol, col="black", width=0.08, size = 0.2,
aes(x=xpos,
ymin=emmean-SE, ymax=emmean+SE)) +
geom_text(data=cld.vol, col="black", size = 8/2.845276,
aes(y=emmean, x=xpos.l, label=.group, hjust = 0)) +
labs(x = "",
y = c(expression(paste("Ejaculate volume (ml)")))) +
my_theme +
# increase symbol size in legend
guides(colour = guide_legend(override.aes = list(size  = 8/2.845276)))
# volume plot
plot.vol <- dat %>%
ggplot() +
geom_point(aes(x = sample, y = volume, col = season),
size = 1.5,
position = position_jitterdodge(jitter.width = 0, dodge.width = 0.4)) +
geom_vline(xintercept = 1.5, linetype = "dashed") +
scale_colour_manual(name = "",
values = c("orange", "cornflowerblue"),
labels = c("F0: summer or F1-S",
"F0: winter or F1-W"))+
scale_y_continuous(lim = c(0, 7.1), breaks = seq(0, 7, 2)) +
scale_x_discrete(labels= xlabs.vol) +
geom_point(data=cld.vol, col="black", size = 1,
aes(x=xpos, y=emmean)) +
geom_errorbar(data=cld.vol, col="black", width=0.08, size = 0.2,
aes(x=xpos,
ymin=emmean-SE, ymax=emmean+SE)) +
geom_text(data=cld.vol, col="black", size = 8/2.845276,
aes(y=emmean, x=xpos.l, label=.group, hjust = 0)) +
labs(x = "",
y = c(expression(paste("Ejaculate volume (ml)")))) +
my_theme +
# increase symbol size in legend
guides(colour = guide_legend(override.aes = list(size  = 8/2.845276)))
hist(dat$density, breaks = 30)
mod.den <- lmerTest::lmer(density ~
# test predictors
season * sample +
# no other control predictors
# random/nested factors
(1|id),
data    = dat,
REML    = TRUE,
control = contr)
summary(mod.den)
performance::check_model(mod.vol)
performance::check_model(mod.den)
emm.den <- emmeans(mod.den,
specs = pairwise ~ season | sample,
type = "response",
adjust = "tukey")
# cld = compact letter display
cld.den <- multcomp::cld(emm.den$emmeans, Letters=letters)
# remove whitespace in string in column ".group"
cld.den$.group <- str_replace_all(cld.den$.group, fixed(" "), "")
x <- c("summerF0-now", "winterF0-now",
"summerF1-early", "winterF1-early",
"summerF1-later", "winterF1-later")
cld.den <- as_tibble(cld.den) %>%
mutate(uniq = paste0(season,sample)) %>%
mutate(uniq =  factor(uniq, levels = x)) %>%
arrange(uniq)
# x axis
xlabs.den <- c("F0 founder \n(summer: 355-375 days) \n(winter: 550-561 days)",
"F1 offspring \n(355-375 days)",
"F1 offspring \n(398-417 days)")
# prepare x-position of emmeans
cld.den$xpos   <- c(0.8, 1.2, 1.8, 2.2, 2.8, 3.2)
cld.den$xpos.l <- c(0.7, 1.25, 1.7, 2.25, 2.7, 3.25)
# density plot
plot.den <- sperm %>%
ggplot() +
geom_point(aes(x = sample, y = density, col = season),
size = 1.5,
position = position_jitterdodge(jitter.width = 0, dodge.width = 0.4)) +
geom_vline(xintercept = 1.5, linetype = "dashed") +
scale_colour_manual(name = "",
values = c("orange", "cornflowerblue"),
labels = c("F0: summer or F1-S",
"F0: winter or F1-W"))+
scale_y_continuous(lim = c(0, 2.15), breaks = seq(0, 2, 0.5)) +
scale_x_discrete(labels= xlabs.den) +
geom_point(data=cld.den, col="black", size = 1,
aes(x=xpos, y=emmean)) +
geom_errorbar(data=cld.den, col="black", width=0.08, size = 0.2,
aes(x=xpos,
ymin=emmean-SE, ymax=emmean+SE)) +
geom_text(data=cld.den, col="black", size = 8/2.845276,
aes(y=emmean, x=xpos.l, label=.group, hjust = 0)) +
labs(x = "",
y = c(expression(paste("Sperm density (x ", 10^9, " ", ml^{-1}, ")")))) +
my_theme +
# increase symbol size in legend
guides(colour = guide_legend(override.aes = list(size  = 8/2.845276)))
# density plot
plot.den <- dat %>%
ggplot() +
geom_point(aes(x = sample, y = density, col = season),
size = 1.5,
position = position_jitterdodge(jitter.width = 0, dodge.width = 0.4)) +
geom_vline(xintercept = 1.5, linetype = "dashed") +
scale_colour_manual(name = "",
values = c("orange", "cornflowerblue"),
labels = c("F0: summer or F1-S",
"F0: winter or F1-W"))+
scale_y_continuous(lim = c(0, 2.15), breaks = seq(0, 2, 0.5)) +
scale_x_discrete(labels= xlabs.den) +
geom_point(data=cld.den, col="black", size = 1,
aes(x=xpos, y=emmean)) +
geom_errorbar(data=cld.den, col="black", width=0.08, size = 0.2,
aes(x=xpos,
ymin=emmean-SE, ymax=emmean+SE)) +
geom_text(data=cld.den, col="black", size = 8/2.845276,
aes(y=emmean, x=xpos.l, label=.group, hjust = 0)) +
labs(x = "",
y = c(expression(paste("Sperm density (x ", 10^9, " ", ml^{-1}, ")")))) +
my_theme +
# increase symbol size in legend
guides(colour = guide_legend(override.aes = list(size  = 8/2.845276)))
plot.vol.noaxis <- plot.vol +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank())
patch.vd <- plot.vol.noaxis / plot.den +
plot_annotation(tag_levels = 'A', tag_prefix = '(', tag_suffix = ')') +
plot_layout(guides = 'collect') &
theme(plot.tag          = element_text(face = 'bold', size = 8),
legend.position   = 'top',
legend.background = element_rect(fill      = NA,
colour    = "black",
linewidth = 0.3,
linetype  = "solid"))
patch.vd
dat %>%
ggplot() +
geom_point(aes(x = sample, y = volume, col = season),
size = 1.5) +
geom_vline(xintercept = 1.5, linetype = "dashed") +
scale_colour_manual(name = "",
values = c("orange", "cornflowerblue"),
labels = c("F0: summer or F1-S",
"F0: winter or F1-W"))+
scale_y_continuous(lim = c(0, 7.1), breaks = seq(0, 7, 2)) +
scale_x_discrete(labels= xlabs.vol) +
geom_point(data=cld.vol, col="black", size = 1,
aes(x=xpos, y=emmean)) +
geom_errorbar(data=cld.vol, col="black", width=0.08, size = 0.2,
aes(x=xpos,
ymin=emmean-SE, ymax=emmean+SE)) +
geom_text(data=cld.vol, col="black", size = 8/2.845276,
aes(y=emmean, x=xpos.l, label=.group, hjust = 0)) +
labs(x = "",
y = c(expression(paste("Ejaculate volume (ml)")))) +
my_theme +
# increase symbol size in legend
guides(colour = guide_legend(override.aes = list(size  = 8/2.845276)))
dat %>%
ggplot() +
geom_point(aes(x = sample, y = volume, col = season),
size = 1.5,
position = position_jitterdodge(jitter.width = 0, dodge.width = 0.4)) +
geom_vline(xintercept = 1.5, linetype = "dashed") +
scale_colour_manual(name = "",
values = c("orange", "cornflowerblue"),
labels = c("F0: summer or F1-S",
"F0: winter or F1-W"))+
scale_y_continuous(lim = c(0, 7.1), breaks = seq(0, 7, 2)) +
scale_x_discrete(labels= xlabs.vol) +
geom_point(data=cld.vol, col="black", size = 1,
aes(x=xpos, y=emmean)) +
geom_errorbar(data=cld.vol, col="black", width=0.08, size = 0.2,
aes(x=xpos,
ymin=emmean-SE, ymax=emmean+SE)) +
geom_text(data=cld.vol, col="black", size = 8/2.845276,
aes(y=emmean, x=xpos.l, label=.group, hjust = 0)) +
labs(x = "",
y = c(expression(paste("Ejaculate volume (ml)")))) +
my_theme +
# increase symbol size in legend
guides(colour = guide_legend(override.aes = list(size  = 8/2.845276)))
dat <- read_csv("./data/sperm-motility.csv")
View(dat)
my_theme = theme_classic() +
theme(text = element_text(family = "sans"),
plot.title  = element_text(face = "plain", size = 10),
axis.title  = element_text(face = "plain", size = 10),
legend.text = element_text(face = "plain", size = 8),
axis.text  = element_text(size = 8, angle = 0, vjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
dat %>%
pivot_longer(
cols = starts_with("motility"),
names_to = "motility.cond",
#names_prefix = "wk",
values_to = "motility.perc",
values_drop_na = FALSE
)
dat <- dat %>%
pivot_longer(
cols = starts_with("motility"),
names_to = "motility.cond",
#names_prefix = "wk",
values_to = "motility.perc",
values_drop_na = FALSE
)
dat <- dat %>%
mutate(sample = paste0(generation, "-", time)) %>%
# make factors
mutate_at(vars(generation,
id,
season,
time,
sample) , ~as.factor(.)) %>%
mutate(date = lubridate::dmy(date))
dat
hist(dat$motility.000, breaks = 30)
dat <- read_csv("../data/sperm-motility.csv")
dat <- read_csv("./data/sperm-motility.csv")
dat
dat <- dat %>%
mutate(sample = paste0(generation, "-", time)) %>%
# make factors
mutate_at(vars(generation,
id,
season,
time,
sample) , ~as.factor(.)) %>%
mutate(date = lubridate::dmy(date))
dat
hist(dat$motility.000, breaks = 30)
contr = lmerControl(optCtrl = list(maxfun = 10000000),
calc.derivs = FALSE)
mod.mot.000 <- lmerTest::lmer(motility.000 ~
# test predictors
season * sample +
# no other control predictors
# random/nested factors
(1|id),
data    = dat,
REML    = TRUE,
control = contr)
my_theme = theme_classic() +
theme(text = element_text(family = "sans"),
plot.title  = element_text(face = "plain", size = 10),
axis.title  = element_text(face = "plain", size = 10),
legend.text = element_text(face = "plain", size = 7),
axis.text  = element_text(size = 8, angle = 0, vjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
dat <- read_csv("./data/blastocyst-rates.csv")
View(dat)
dat
dat <- dat %>%
mutate_at(vars(generation,
id,
season) , ~as.factor(.))
dat
hist(dat$blast, breaks = 30)
View(dat)
mod.blast <- lmerTest::lmer(blast ~
# test predictors
season * generation +
# no other control predictors
# random/nested factors
(1|id),
data    = dat,
REML    = TRUE,
control = contr)
contr = lmerControl(optCtrl = list(maxfun = 10000000),
calc.derivs = FALSE)
mod.blast <- lmerTest::lmer(blast ~
# test predictors
season * generation +
# no other control predictors
# random/nested factors
(1|id),
data    = dat,
REML    = TRUE,
control = contr)
