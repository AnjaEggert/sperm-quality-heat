---
title: "Summer heat during spermatogenesis in bulls, Fig.4"
author: "Jens Vanselow, Claudia Wesenauer, Anja Eggert, Arpna Sharma and Frank Becker"
date: "`r Sys.Date()`" 
editor: visual
code-fold: false
toc: true
format: html
self-contained: true
bibliography: references.bib
---

# Libraries

```{r, libraries, warning=FALSE, message=FALSE, echo=TRUE}
library(tidyverse)     # tidy universe
library(lmerTest)      # linear mixed model with pvals
library(emmeans)       # post-hoc
library(performance)   # model performance
library(patchwork)     # combine plots
```

```{r, my_theme, echo = FALSE}
my_theme = theme_classic() +
  theme(text = element_text(family = "sans"),
        plot.title  = element_text(face = "plain", size = 10),
        axis.title  = element_text(face = "plain", size = 10),
        legend.text = element_text(face = "plain", size = 8),
        axis.text  = element_text(size = 8, angle = 0, vjust = 0.5),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())
```

```{r, seed}
set.seed(1989)
```

# Read data

```{r, read-data}
dat <- read_csv("../data/sperm-motility.csv")
```

## Adjust data types

```{r, data-adjust-2}
dat <- dat %>% 
  mutate(sample = paste0(generation, "-", time)) %>%
  mutate_at(vars(generation,
                 id,
                 season,
                 time, 
                 sample) , ~as.factor(.)) %>% 
  mutate(date = lubridate::dmy(date))
```

# Motility, fresh semen

## Data viz & distribution

```{r}
hist(dat$motility.000, breaks = 30)
```

## Linear mixed model

```{r, model-contr-1}
contr = lmerControl(optCtrl = list(maxfun = 10000000),
                    calc.derivs = FALSE)
```

-   `(1|id/season)` gives a singular matrix problem, i.e. too complex for too few observations

-   interaction `season * sample` not significant and model not different

-   boundary (singular) fit: see help('isSingular')

```{r, model-1}
mod.mot.000 <- lmerTest::lmer(motility.000 ~ 
                                # test predictors
                                season * sample +
                                # no other control predictors
                                # random/nested factors
                                (1|id),
                              data    = dat,
                              REML    = TRUE,
                              control = contr)
```

### Model summary

```{r, model-sum-1}
summary(mod.mot.000)
```

```{r, model-anova-1}
car::Anova(mod.mot.000, type = "II", test.statistic = "Chisq")
car::Anova(mod.mot.000, type = "II", test.statistic = "F")
```

### Model performance

-   some basic checks with functions of package `performance`

```{r, model-perf-1, fig.height=10, fig.width=10, warning=FALSE}
check_model(mod.mot.000)
```

### Estimated Marginal Means

```{r, emmeans-1}
emmeans(mod.mot.000,
        specs  = pairwise ~ season,
        type   = "response",
        adjust = "tukey")

emmeans(mod.mot.000, 
        specs  = pairwise ~ sample,
        type   = "response",
        adjust = "tukey")
```

```{r, emmeans-2}
emm.mot.000 <- emmeans(mod.mot.000, 
               specs = pairwise ~ season | sample,
               type = "response",
               adjust = "tukey")
```

```{r, emmeans-3}
emm.mot.000$emmeans

emm.mot.000$contrasts
```

## Plot

-   prepare letter display for plots

```{r, cld-1}
# cld = compact letter display 
cld.mot.000 <- multcomp::cld(emm.mot.000$emmeans, Letters = letters) 

# remove whitespace in string in column ".group"
cld.mot.000$.group <- str_replace_all(cld.mot.000$.group, fixed(" "), "")

x <- c("summerF0-now", "winterF0-now", 
       "summerF1-early", "winterF1-early",
       "summerF1-later", "winterF1-later")

cld.mot.000 <- as_tibble(cld.mot.000) %>% 
  mutate(uniq = paste0(season,sample)) %>% 
  mutate(uniq =  factor(uniq, levels = x)) %>%
  arrange(uniq)
```

```{r, cld-2}
cld.mot.000
```

```{r, cld-3}
# x axis
xlabs.mot.000 <- c("F0 founder \n(summer: 355-375 days) \n(winter: 550-561 days)",
                   "F1 offspring \n(355-375 days)",
                   "F1 offspring \n(398-417 days)")

# prepare x-position of emmeans
cld.mot.000$xpos   <- c(0.8, 1.2, 1.8, 2.2, 2.8, 3.2)
cld.mot.000$xpos.l <- c(0.7, 1.25, 1.7, 2.25, 2.7, 3.25)
```

```{r, plot-mot-000}
plot.mot.000 <- dat %>% 
  ggplot() +
  geom_point(aes(x = sample, 
                 y = motility.000, 
                 col = season),
             size = 1.5,
             position = position_jitterdodge(jitter.width = 0, 
                                             dodge.width = 0.4)) +
  geom_vline(xintercept = 1.5, linetype = "dashed") +
  scale_colour_manual(name   = "",
                      values = c("orange", "cornflowerblue"),
                      labels = c("F0: summer or F1-S",
                                 "F0: winter or F1-W")) +
  scale_y_continuous(lim = c(0, 100), breaks = seq(0, 100, 20)) +
  scale_x_discrete(labels = xlabs.mot.000) +
  geom_point(data = cld.mot.000,
             aes(x = xpos,
                 y = emmean),
             col = "black", size=1) +
  geom_errorbar(data = cld.mot.000,
                aes(x    = xpos,
                    ymin = emmean-SE, 
                    ymax = emmean+SE),
                col="black", width=0.08, size = 0.2) +
  geom_text(data = cld.mot.000, 
            aes(x = xpos.l,
                y = emmean, 
                label = .group, hjust = 0),
            col="black", size = 8/2.845276) +
  labs(x = "",
       y = c(expression(paste("Proportion of motile dats (%)")))) +
  annotate(geom  = "text",
           x     = 0.5,
           y     = 100, 
           label = "Freshly collected semen", 
           hjust = -0.05, vjust = -0.05, size = 8/2.845276) +
  my_theme +
  # increase symbol size in legend
  guides(colour = guide_legend(override.aes = list(size = 8/2.845276)))
```

# Motility, thawed semen & 30 min at 40Â°C

## Data viz & distribution

```{r, data-viz-2}
hist(dat$motility.030, breaks = 30)
```

## Linear mixed model

```{r, model-contr-2}
contr = lmerControl(optCtrl = list(maxfun = 10000000),
                    calc.derivs = FALSE)
```

-   `(1|id/season)` gives a singular matrix problem, i.e. too complex for too few observations

-   interaction `season * sample` not significant and model not different

-   boundary (singular) fit: see help('isSingular')

```{r, model-2}
mod.mot.030 <- lmerTest::lmer(motility.030 ~ 
                                # test predictors
                                season * sample +
                                # no other control predictors
                                # random/nested factors
                                (1|id),
                              data    = dat,
                              REML    = TRUE,
                              control = contr)
```

### Model summary

```{r, model-sum-2}
summary(mod.mot.030)
```

```{r, model-anova-2}
car::Anova(mod.mot.030, type = "II", test.statistic = "Chisq")
car::Anova(mod.mot.030, type = "II", test.statistic = "F")
```

### Model performance

-   some basic checks with functions of package `performance`

```{r, model-perf-2, fig.height=10, fig.width=10, warning=FALSE}
check_model(mod.mot.030)
```

### Estimated Marginal Means

```{r, emmeans-4}
emmeans(mod.mot.030, 
        specs  = pairwise ~ season,
        type   = "response",
        adjust = "tukey")

emmeans(mod.mot.030, 
        specs  = pairwise ~ sample,
        type   = "response",
        adjust = "tukey")
```

```{r, emmeans-5}
emm.mot.030 <- emmeans(mod.mot.030,
                       specs = pairwise ~ season | sample,
                       type = "response",
                       adjust = "tukey")
```

```{r, emmeans-6}
emm.mot.030$emmeans

emm.mot.030$contrasts
```

## Plot

-   prepare letter display for plots

```{r, cld-4}
# cld = compact letter display 
cld.mot.030 <- multcomp::cld(emm.mot.030$emmeans, Letters = letters) 

# remove whitespace in string in column ".group"
cld.mot.030$.group <- str_replace_all(cld.mot.030$.group, fixed(" "), "")

x <- c("summerF0-now", "winterF0-now", 
       "summerF1-early", "winterF1-early",
       "summerF1-later", "winterF1-later")

cld.mot.030 <- as_tibble(cld.mot.030) %>% 
  mutate(uniq = paste0(season,sample)) %>% 
  mutate(uniq =  factor(uniq, levels = x)) %>%
  arrange(uniq)
```

```{r, cld-5}
cld.mot.030
```

```{r, cld-6}
# x axis
xlabs.mot.030 <- c("F0 founder \n(summer: 355-375 days) \n(winter: 550-561 days)",
                   "F1 offspring \n(355-375 days)",
                   "F1 offspring \n(398-417 days)")

# prepare x-position of emmeans
cld.mot.030$xpos   <- c(0.8, 1.2, 1.8, 2.2, 2.8, 3.2)
cld.mot.030$xpos.l <- c(0.7, 1.25, 1.7, 2.25, 2.7, 3.25)
```

```{r, plot-mot-030}
plot.mot.030 <- dat %>% 
  ggplot() +
  geom_point(aes(x = sample, 
                 y = motility.030,
                 col = season),
             size = 1.5,
             position = position_jitterdodge(jitter.width = 0, 
                                             dodge.width  = 0.4)) +
  geom_vline(xintercept = 1.5, linetype = "dashed") +
  scale_colour_manual(name = "",
                      values = c("orange", "cornflowerblue"),
                      labels = c("F0: summer or F1-S",
                                 "F0: winter or F1-W")) +
  scale_y_continuous(lim = c(0, 100), breaks = seq(0, 100, 20)) +
  scale_x_discrete(labels = xlabs.mot.030) +
  geom_point(data = cld.mot.030, 
             aes(x = xpos, 
                 y = emmean),
             col = "black", size = 1) +
  geom_errorbar(data = cld.mot.030, 
                aes(x    = xpos,
                    ymin = emmean-SE,
                    ymax = emmean+SE),
                col = "black", width = 0.08, size = 0.2) +
  geom_text(data = cld.mot.030,
            aes(x = xpos.l,
                y = emmean,
                label = .group, hjust = 0),
            col = "black", size = 8/2.845276) +
  labs(x = "",
       y = c(expression(paste("Proportion of motile sperms (%)")))) +
  annotate(geom  = "text",
           x     = 0.5,
           y     = 100, 
           label = "Frozen & re-thawed semen & 30 min at 40Â°C", 
           hjust = -0.05, vjust = -0.05, size = 8/2.845276) +
  my_theme +
  # increase symbol size in legend
  guides(colour = guide_legend(override.aes = list(size = 8/2.845276)))
```

# Motility, thawed semen & 120 min at 40Â°C

## Data viz & distribution

```{r, data-viz-3}
hist(dat$motility.120, breaks = 30)
```

## Linear mixed model

```{r, model-contr-3}
contr = lmerControl(optCtrl = list(maxfun = 10000000),
                    calc.derivs = FALSE)
```

-   `(1|id/season)` gives a singular matrix problem, i.e. too complex for too few observations

-   interaction `season * sample` not significant and model not different

-   boundary (singular) fit: see help('isSingular')

```{r, model-3}
mod.mot.120 <- lmerTest::lmer(motility.120 ~ 
                                # test predictors
                                season * sample +
                                # no other control predictors
                                # random/nested factors
                                (1|id),
                              data    = dat,
                              REML    = TRUE,
                              control = contr)
```

### Model summary

```{r, model-sum-3}
summary(mod.mot.120)
```

```{r, model-anova-3}
car::Anova(mod.mot.120, type = "II", test.statistic = "Chisq")
car::Anova(mod.mot.120, type = "II", test.statistic = "F")
```

### Model performance

-   some basic checks with functions of package `performance`

```{r, model-perf-3, fig.height=10, fig.width=10, warning=FALSE}
check_model(mod.mot.120)
```

### Estimated Marginal Means

```{r, emmeans-7}
emmeans(mod.mot.120, 
        specs  = pairwise ~ season,
        type   = "response",
        adjust = "tukey")

emmeans(mod.mot.120, 
        specs  = pairwise ~ sample,
        type   = "response",
        adjust = "tukey")
```

```{r, emmeans-8}
emm.mot.120 <- emmeans(mod.mot.120, 
               specs = pairwise ~ season | sample,
               type = "response",
               adjust = "tukey")
```

```{r, emmeans-9}
emm.mot.120$emmeans

emm.mot.120$contrasts
```

## Plot

-   prepare letter display for plots

```{r, cld-7}
# cld = compact letter display 
cld.mot.120 <- multcomp::cld(emm.mot.120$emmeans, Letters = letters) 

# remove whitespace in string in column ".group"
cld.mot.120$.group <- str_replace_all(cld.mot.120$.group, fixed(" "), "")

x <- c("summerF0-now", "winterF0-now", 
       "summerF1-early", "winterF1-early",
       "summerF1-later", "winterF1-later")

cld.mot.120 <- as_tibble(cld.mot.120) %>% 
  mutate(uniq = paste0(season,sample)) %>% 
  mutate(uniq =  factor(uniq, levels = x)) %>%
  arrange(uniq)
```

```{r, cld-8}
cld.mot.120
```

```{r, cld-9}
# x axis
xlabs.mot.120 <- c("F0 founder \n(summer: 355-375 days) \n(winter: 550-561 days)",
                   "F1 offspring \n(355-375 days)",
                   "F1 offspring \n(398-417 days)")

# prepare x-position of emmeans
cld.mot.120$xpos   <- c(0.8, 1.2, 1.8, 2.2, 2.8, 3.2)
cld.mot.120$xpos.l <- c(0.7, 1.25, 1.7, 2.25, 2.7, 3.25)
```

```{r, plot-mot-0120}
plot.mot.120 <- dat %>% 
  ggplot() +
  geom_point(aes(x = sample, 
                 y = motility.120,
                 col = season),
             size = 1.5,
             position = position_jitterdodge(jitter.width = 0, 
                                             dodge.width = 0.4)) +
  geom_vline(xintercept = 1.5, linetype = "dashed") +
  scale_colour_manual(name   = "",
                      values = c("orange", "cornflowerblue"),
                      labels = c("F0: summer or F1-S",
                                 "F0: winter or F1-W")) +
  scale_y_continuous(lim = c(0, 100), breaks = seq(0, 100, 20)) +
  scale_x_discrete(labels = xlabs.mot.120) +
  geom_point(data = cld.mot.120,
             aes(x = xpos, 
                 y = emmean),
             col = "black", size = 1) +
  geom_errorbar(data = cld.mot.120, 
                aes(x    = xpos,
                    ymin = emmean-SE,
                    ymax = emmean+SE),
                col = "black", width = 0.08, size = 0.2) +
  geom_text(data = cld.mot.120, 
            aes(x = xpos.l,
                y = emmean,
                label = .group, hjust = 0),
            col = "black", size = 8/2.845276) +
  labs(x = "",
       y = c(expression(paste("Proportion of motile sperms (%)")))) +
  annotate(geom  = "text",
           x     = 0.5,
           y     = 100, 
           label = "Frozen & re-thawed semen & 120 min at 40Â°C", 
           hjust = -0.05, vjust = -0.05, size = 8/2.845276) +
  my_theme +
  # increase symbol size in legend
  guides(colour = guide_legend(override.aes = list(size = 8/2.845276)))
```

# Combined plot: all motilities

```{r, plot-comb-1}
plot.mot.000.noaxis <- plot.mot.000 +
  theme(axis.title.x = element_blank(),
        axis.text.x  = element_blank())

plot.mot.030.noaxis <- plot.mot.030 +
  theme(axis.title.x = element_blank(),
        axis.text.x  = element_blank())

patch.mot <- plot.mot.000.noaxis / plot.mot.030.noaxis / plot.mot.120 +
  plot_annotation(tag_levels = 'A', 
                  tag_prefix = '(', 
                  tag_suffix = ')') +
  plot_layout(guides = 'collect') &
  theme(plot.tag          = element_text(face = 'bold', size = 8),
        legend.position   = 'top',
        legend.background = element_rect(fill      = NA, 
                                         colour    = "black",
                                         linewidth = 0.3, 
                                         linetype  = "solid"))
```

```{r, plot-comb-2, fig.height=21, fig.width=10, warning=FALSE}
patch.mot
```

# How to cite R

"All analyses were performed using R Statistical Software (version 4.2.0; R Core Team 2022)".

Reference: R Core Team (2022). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/.

```{r, cite-r}
citation()
version$version.string
```

```{r, cite-packages}
citation("tidyverse")
citation("lmerTest")
citation("emmeans")
citation("performance")
citation("patchwork")
```

# Session Info

```{r, session}
sessionInfo()
```
