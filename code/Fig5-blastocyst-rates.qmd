---
title: "Summer heat during spermatogenesis in bulls, Fig.5"
author: "Jens Vanselow, Claudia Wesenauer, Anja Eggert, Arpna Sharma and Frank Becker"
date: "`r Sys.Date()`" 
editor: visual
code-fold: false
toc: true
format: html
self-contained: true
bibliography: references.bib
---

# Libraries

```{r, libraries, warning=FALSE, message=FALSE, echo=TRUE}
library(tidyverse)     # tidy universe
library(lmerTest)      # linear mixed model with pvals
library(emmeans)       # post-hoc
library(performance)   # model performance
library(effectsize)    # effect sizes
library(patchwork)     # combine plots
```

```{r, my_theme, echo = FALSE}
my_theme = theme_classic() +
  theme(text = element_text(family = "sans"),
        plot.title  = element_text(face = "plain", size = 10),
        axis.title  = element_text(face = "plain", size = 10),
        legend.text = element_text(face = "plain", size = 7),
        axis.text  = element_text(size = 8, angle = 0, vjust = 0.5),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())
```

```{r, seed}
set.seed(1989)
```

# Read data

```{r, read-data}
dat <- read_csv("../data/blastocyst-rates.csv")
```

## Adjust data types

```{r, data-adjust}
dat <- dat %>% 
  mutate_at(vars(generation,
                 id,
                 season) , ~as.factor(.))
```

# Blastocyst rate

## Data viz & distribution

```{r, data-viz-1}
hist(dat$blast, breaks = 30)
```

## Linear mixed model

```{r, model-contr-1}
contr = lmerControl(optCtrl = list(maxfun = 10000000),
                    calc.derivs = FALSE)
```

-   `(1|id/season)` gives a singular matrix problem, i.e. too complex for too few observations

-   interaction `season * sample` not significant and model not different

```{r, model-1}
mod.blast <- lmerTest::lmer(blast ~ 
                            # test predictors
                            season * generation +
                            # no other control predictors
                            # random/nested factors
                            (1|id),
                          data    = dat,
                          REML    = TRUE,
                          control = contr)
```

### Model summary

```{r, model-sum-1}
summary(mod.blast)
```

```{r, model-anova-1}
car::Anova(mod.blast, type = "II", test.statistic = "Chisq")
car::Anova(mod.blast, type = "II", test.statistic = "F")
```

### Model performance

-   some basic checks with functions of package `performance`

```{r, model-perf-1, fig.height=10, fig.width=10, warning=FALSE}
check_model(mod.blast)
```

### Estimated Marginal Means

-   Look at "overall" comparisons among groups and estimate main effects. Doing main effects in the presence of an interaction means we average over the levels of the other factor(s).

```{r, emmeans-1}
emmeans(mod.blast,
        specs  = pairwise ~ season,
        type   = "response",
        adjust = "tukey")

emmeans(mod.blast,
        specs  = pairwise ~ generation,
        type   = "response",
        adjust = "tukey")
```

-   Here we obtain the estimated marginal means (EMMs) for `season` within `sample` defining `specs = pairwise ~ season|sample`

```{r, emmeans-2}
emm.blast <- emmeans(mod.blast, 
                     specs = pairwise ~ season | generation,
                     type = "response",
                     adjust = "tukey")
```

```{r, emmeans-3}
emm.blast$emmeans

emm.blast$contrasts
```

## Plot

-   prepare letter display for plots

```{r, cld-1}
# cld = compact letter display 
cld.blast <- multcomp::cld(emm.blast$emmeans, Letters = letters) 

# remove whitespace in string in column ".group"
cld.blast$.group <- str_replace_all(cld.blast$.group, fixed(" "), "")

x <- c("F0-summer", "F0-winter", 
       "F1-summer", "F1-winter")

cld.blast <- as_tibble(cld.blast) %>% 
  mutate(uniq = paste0(season,generation)) %>% 
  mutate(uniq = factor(uniq))
```

```{r, cld-2}
cld.blast
```

```{r, cld-3}
# x axis
xlabs.blast <- c("F0 founder \n(summer: 355-375 days) \n(winter: 550-561 days)",
                 "F1 offspring \n(355-375 days)")

# prepare x-position of emmeans
cld.blast$xpos   <- c(0.8, 1.2, 1.8, 2.2)
cld.blast$xpos.l <- c(0.7, 1.25, 1.7, 2.25)
```

```{r, plot-blast}
plot.blast <- dat %>% 
  ggplot() +
  geom_boxplot(aes(x = generation, 
                   y = blast, 
                   fill = season),
               outlier.shape = NA, width = 0.3, linewidth = 0.2) +
  scale_fill_manual(name = "",
                    values = c("orange", "cornflowerblue"),
                    labels = c("F0: summer or F1-S", 
                               "F0: winter or F1-W")) +
  scale_y_continuous(lim = c(0, 1), breaks = seq(0, 1, 0.2)) +
  scale_x_discrete(labels = xlabs.blast) +
  geom_point(data=cld.blast, 
             aes(x = xpos, 
                 y = emmean),
             col = "black", size = 1) +
  geom_errorbar(data = cld.blast, 
                aes(x    = xpos,
                    ymin = emmean-SE,
                    ymax = emmean+SE),
                col = "black", width = 0.08, linewidth = 0.2) +
  geom_text(data = cld.blast, 
            aes(x = xpos.l, 
                y = emmean, 
                label = .group, hjust = 0),
            col = "black", size = 8/2.845276) +
  labs(x = "",
       y = c(expression(paste("Blastocyst rate (day 8)")))) +
  my_theme +
  # increase symbol size in legend
  guides(colour = guide_legend(override.aes = list(size = 7/2.845276)))
```

## Effect size

[@cohen1988]

```{r, effect-1}
d.blast.F0 <- cohens_d(blast ~ season, data = dat[which(dat$generation=='F0'), ])
d.blast.F1 <- cohens_d(blast ~ season, data = dat[which(dat$generation=='F1'), ])

interpret_cohens_d(d.blast.F0, rules = "cohen1988")
interpret_cohens_d(d.blast.F1, rules = "cohen1988")
```

# Hatch rate

## Data viz & distribution

```{r, data-viz-2}
hist(dat$hatch, breaks = 30)
```

## Linear mixed model

```{r, model-contr-2}
contr = lmerControl(optCtrl = list(maxfun = 10000000),
                    calc.derivs = FALSE)
```

-   `(1|id/season)` gives a singular matrix problem, i.e. too complex for too few observations

-   interaction `season * sample` not significant and model not different

```{r, model-2}
mod.hatch <- lmerTest::lmer(hatch ~ 
                              # test predictors
                              season * generation +
                              # no other control predictors
                              # random/nested factors
                              (1|id),
                            data    = dat,
                            REML    = TRUE,
                            control = contr)
```

### Model summary

```{r, model-sum-2}
summary(mod.hatch)
```

```{r, model-anova-2}
car::Anova(mod.hatch, type = "II", test.statistic = "Chisq")
car::Anova(mod.hatch, type = "II", test.statistic = "F")
```

### Model performance

-   some basic checks with functions of package `performance`

```{r, model-perf-2, fig.height=10, fig.width=10, warning=FALSE}
check_model(mod.hatch)
```

### Estimated Marginal Means

```{r}
emmeans(mod.hatch,
        specs  = pairwise ~ season,
        type   = "response",
        adjust = "tukey")

emmeans(mod.hatch,
        specs  = pairwise ~ generation,
        type   = "response",
        adjust = "tukey")
```

```{r}
emm.hatch <- emmeans(mod.hatch, 
                     specs = pairwise ~ season | generation,
                     type = "response",
                     adjust = "tukey")
```

```{r}
emm.hatch$emmeans

emm.hatch$contrasts
```

## Plot

-   prepare letter display for plots

```{r, cld-4}
# cld = compact letter display 
cld.hatch <- multcomp::cld(emm.hatch$emmeans, Letters = letters) 

# remove whitespace in string in column ".group"
cld.hatch$.group <- str_replace_all(cld.hatch$.group, fixed(" "), "")

x <- c("F0-summer", "F0-winter", 
       "F1-summer", "F1-winter")

cld.hatch <- as_tibble(cld.hatch) %>% 
  mutate(uniq = paste0(season,generation)) %>% 
  mutate(uniq = factor(uniq))
```

```{r, cld-5}
cld.hatch
```

```{r, cld-6}
# x axis
xlabs.hatch <- c("F0 founder \n(summer: 355-375 days) \n(winter: 550-561 days)",
                 "F1 offspring \n(355-375 days)")

# prepare x-position of emmeans
cld.hatch$xpos   <- c(0.8, 1.2, 1.8, 2.2)
cld.hatch$xpos.l <- c(0.7, 1.25, 1.7, 2.25)
```

```{r, plot-hatch}
plot.hatch <- dat %>% 
  ggplot() +
  geom_boxplot(aes(x    = generation, 
                   y    = hatch, 
                   fill = season),
               outlier.shape = NA, width = 0.3, linewidth = 0.2) +
  scale_fill_manual(name = "",
                    values = c("orange", "cornflowerblue"),
                    labels = c("F0: summer or F1-S", 
                               "F0: winter or F1-W")) +
  scale_y_continuous(lim = c(0, 1), breaks = seq(0, 1, 0.2)) +
  scale_x_discrete(labels = xlabs.hatch) +
  geom_point(data = cld.hatch, 
             aes(x = xpos,
                 y = emmean),
             col = "black", size = 1) +
  geom_errorbar(data = cld.hatch, 
                aes(x    = xpos,
                    ymin = emmean-SE,
                    ymax = emmean+SE),
                col = "black", width = 0.08, linewidth = 0.2) +
  geom_text(data = cld.hatch,
            aes(x = xpos.l, 
                y = emmean,
                label = .group, hjust = 0),
            col = "black", size = 8/2.845276) +
  labs(x = "",
       y = c(expression(paste("Hatch rate")))) +
  my_theme +
  # increase symbol size in legend
  guides(colour = guide_legend(override.aes = list(size = 7/2.845276)))
```

## Effect size

[@cohen1988]

```{r, effect-2}
d.hatch.F0 <- cohens_d(hatch ~ season, data = dat[which(dat$generation=='F0'), ])
d.hatch.F1 <- cohens_d(hatch ~ season, data = dat[which(dat$generation=='F1'), ])

interpret_cohens_d(d.hatch.F0, rules = "cohen1988")
interpret_cohens_d(d.hatch.F1, rules = "cohen1988")
```

# Combined plot: blastocyst and hatch rate

```{r, plot-comb-1}
plot.blast.noaxis <- plot.blast +
  theme(axis.title.x = element_blank(),
        axis.text.x  = element_blank())

patch.bh <- plot.blast.noaxis / plot.hatch +
  plot_annotation(tag_levels = 'A', 
                  tag_prefix = '(', 
                  tag_suffix = ')') +
  plot_layout(guides = 'collect') &
  theme(plot.tag          = element_text(face = 'bold', size = 8),
        legend.position   = 'top',
        legend.background = element_rect(fill      = NA, 
                                         colour    = "black",
                                         linewidth = 0.3, 
                                         linetype  = "solid"))
```

```{r, plot-comb-2, fig.height=20, fig.width=10, warning=FALSE}
patch.bh
```

# How to cite R

"All analyses were performed using R Statistical Software (version 4.2.0; R Core Team 2022)".

Reference: R Core Team (2022). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/.

```{r, cite-r}
citation()
version$version.string
```

```{r, cite-packages}
citation("tidyverse")
citation("lmerTest")
citation("emmeans")
citation("performance")
citation("effectsize")
citation("patchwork")
```

# Session Info

```{r, session}
sessionInfo()
```
